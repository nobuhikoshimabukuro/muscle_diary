・プロジェクト作成
composer create-project laravel/laravel --prefer-dist TEST1

・APP_KEY作成
php artisan key:generate

・認証機能作成
php artisan make:auth

★ビルトインサーバー起動
php artisan serv

・他のPCから確認する方法
hostになるPCのServer起動コマンド
php artisan serve --host 0.0.0.0

hostになるPCのipを含むURL
http://(hostPCのip):8000/
http://192.168.1.19:8000/


ALTER TABLE `factmaster` auto_increment = 1;


//トランザクション
DB::connection('mysql')->beginTransaction();
DB::connection('sqlsrv')->beginTransaction();

//ロールバック
DB::connection('mysql')->rollBack();
DB::connection('sqlsrv')->rollback();

//コミット
DB::connection('mysql')->commit();
DB::connection('sqlsrv')->commit();


php VIEWでのブレイクのやり方
   
   @php xdebug_break(); @endphp
   
   

・アップデート 各環境Clone時またライブラリを更新時
composer update
composer install

★マイグレーション作成
・新規用
php artisan make:migration create_user_m --create=user_m

・コントローラー作成
php artisan make:controller master/user_m_controller
php artisan make:controller web/main_controller

・モデル作成
php artisan make:model user_m_model


・リクエスト作成
php artisan make:request user_m_request


・マイグレーション実行
php artisan migrate

・マイグレーション実行 既存Table削除し再作成する
php artisan migrate:fresh --database=mysql

★マイグレーション ロールバックして再作成 シードも実行
php artisan migrate:refresh --seed


・ロールバック 最後に一度に実行したマイグレーションをロールバック migrationテーブルのbatchの単位
php artisan migrate:rollback

・シーダー作成
php artisan make:seeder MKamokuTableSeeder

・シード実行
php artisan db:seed
・クラスを指定して実行
php artisan db:seed --class=UsersTableSeeder

・ミドルウェア作成
php artisan make:middleware FormInputFilter

・ストレージシンボリックリンク
php artisan storage:link

・ストレージシンボリックリンク解除
rm public/storage

・laravelデバッグバー導入
composer require barryvdh/laravel-debugbar
.envの「APP_DEBUG=true」で有効　※本番環境ではfalse

ルールの作成
php artisan make:rule KatakanaValidation

